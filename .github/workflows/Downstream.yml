name: Downstream
on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:

jobs:
  test:
    name: ${{ matrix.package }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - 'CodecZlib'
          - 'CodecLz4'
          - 'CodecZstd'
          - 'CodecBase'
          - 'CodecXz'
          - 'CodecBzip2'
          - 'ZipArchives'
          - 'JLD2'
          - 'Automa'
          - 'FASTX'
          - 'WriteVTK'
          - 'RData'
          - 'HTTP'
          - 'ZipStreams'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: 1
          arch: x64
          show-versioninfo: true
      - name: Load this and run the downstream tests
        shell: julia --color=yes {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          Pkg.activate(;temp=true)
          try
            # force it to use this PR's version of the package and test package
            ENV["JULIA_PKG_DEVDIR"]= mktempdir()
            Pkg.develop([
              PackageSpec(name="${{ matrix.package }}"),
              PackageSpec(path="."),
              PackageSpec(path="./lib/TestsForCodecPackages"),
            ])
            # resolver may fail with main deps
            Pkg.update()
            Pkg.test("${{ matrix.package }}") # resolver may fail with test time deps
          catch err
            err isa Pkg.Resolve.ResolverError || rethrow()
            # If we can't resolve that means this is incompatible by SemVer and this is fine.
            # It means we marked this as a breaking change, so we don't need to worry about.
            # Mistakenly introducing a breaking change, as we have intentionally made one.
            @info "Not compatible with this release. No problem." exception=err
            exit(0)  # Exit immediately, as a success
          end
