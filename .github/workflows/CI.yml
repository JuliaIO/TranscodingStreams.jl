name: CI
on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        arch:
          - x64
        include:
          - os: ubuntu-latest
            version: '1'
            arch: x86
          - os: macOS-14
            version: '1'
            arch: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          show-versioninfo: true
      - uses: julia-actions/cache@v2
      - name: Develop packages
        run: |
            using Pkg
            Pkg.Registry.update()
            Pkg.develop([
                PackageSpec(path="."),
                PackageSpec(path="./lib/TestsForCodecPackages"),
            ])
            Pkg.update()
            Pkg.status(;mode=Pkg.PKGMODE_PROJECT)
            Pkg.status(;mode=Pkg.PKGMODE_MANIFEST)
        shell: julia --project=test --color=yes --check-bounds=yes {0}
      - name: Run tests
        env:
          JULIA_LOAD_PATH: "@"
        run: |
          julia --project=test --color=yes --depwarn=yes --warn-overwrite=yes --check-bounds=yes --startup-file=no --code-coverage=user test/runtests.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using TranscodingStreams
            DocMeta.setdocmeta!(TranscodingStreams, :DocTestSetup, :(using TranscodingStreams); recursive=true)
            doctest(TranscodingStreams)'
